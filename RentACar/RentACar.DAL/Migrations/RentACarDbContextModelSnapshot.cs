// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACar.DAL.DB;

namespace RentACar.DAL.Migrations
{
    [DbContext(typeof(RentACarDbContext))]
    partial class RentACarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentACar.DAL.Domain.BookedCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookedTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("BookedCars");
                });

            modelBuilder.Entity("RentACar.DAL.Domain.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("YearOfProduction")
                        .HasColumnType("int")
                        .HasMaxLength(2020);

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Black",
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 779, DateTimeKind.Utc).AddTicks(9837),
                            HorsePower = 131,
                            Name = "Mercedes Benz C220",
                            NumberOfDoors = 5,
                            YearOfProduction = 2012
                        },
                        new
                        {
                            Id = 2,
                            Color = "Red",
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 780, DateTimeKind.Utc).AddTicks(4666),
                            HorsePower = 151,
                            Name = "Mercedes Benz E220",
                            NumberOfDoors = 5,
                            YearOfProduction = 2014
                        },
                        new
                        {
                            Id = 3,
                            Color = "White",
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 780, DateTimeKind.Utc).AddTicks(4745),
                            HorsePower = 131,
                            Name = "Audi A6",
                            NumberOfDoors = 5,
                            YearOfProduction = 2013
                        });
                });

            modelBuilder.Entity("RentACar.DAL.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 788, DateTimeKind.Utc).AddTicks(1477),
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 788, DateTimeKind.Utc).AddTicks(2372),
                            Name = "Bugojno"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 788, DateTimeKind.Utc).AddTicks(2388),
                            Name = "Mostar"
                        });
                });

            modelBuilder.Entity("RentACar.DAL.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookedCarId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedCarId = 0,
                            CityId = 1,
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 790, DateTimeKind.Utc).AddTicks(1842),
                            DateofBirth = new DateTime(1999, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ahmed",
                            Lastname = "Terzić",
                            Username = "Terzich"
                        },
                        new
                        {
                            Id = 2,
                            BookedCarId = 0,
                            CityId = 2,
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 790, DateTimeKind.Utc).AddTicks(6054),
                            DateofBirth = new DateTime(1998, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nihad",
                            Lastname = "Hrustić",
                            Username = "Nixi"
                        },
                        new
                        {
                            Id = 3,
                            BookedCarId = 0,
                            CityId = 3,
                            DateCreated = new DateTime(2020, 11, 5, 12, 33, 46, 790, DateTimeKind.Utc).AddTicks(6134),
                            DateofBirth = new DateTime(1998, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Zlatan",
                            Lastname = "Haljeta",
                            Username = "Zlaja"
                        });
                });

            modelBuilder.Entity("RentACar.DAL.Domain.BookedCar", b =>
                {
                    b.HasOne("RentACar.DAL.Domain.Car", "Car")
                        .WithMany("BookedCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACar.DAL.Domain.User", "User")
                        .WithMany("BookedCars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.DAL.Domain.User", b =>
                {
                    b.HasOne("RentACar.DAL.Domain.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
